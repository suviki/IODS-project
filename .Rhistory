mat <- read.csv2 ("/Users/suvi/Documents/GitHub/IODS-project/Data/student-mat.csv", header=TRUE, sep=';')
por <- read.csv2 ("/Users/suvi/Documents/GitHub/IODS-project/Data/student-por.csv", header=TRUE, sep=';')
library(dplyr)
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob",
mat_por <- inner_join(mat, por, by = "join_by")
str(mat_por)
join_by <- c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob","reason", "nursery", "internet")
mat_por <- inner_join(mat, por, by = "join_by")
mat_por <- inner_join(mat, por, by = join_by)
View(mat_por)
View(mat_por)
View(mat_por)
View(mat_por)
str(mat_por)
dim(mat_por)
alc <- select(mat_por, one_of(join_by))
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- "change me!"
}
}
View(two_columns)
for(column_name in notjoined_columns) {
two_columns <- select(mat_por, starts_with(column_name))
first_column <- select(two_columns, 1)[[1]]
if(is.numeric(first_column)) {
alc[column_name] <- round(rowMeans(two_columns))
} else {
alc[column_name] <- first_column
}
}
View(alc)
View(alc)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
View(alc)
View(alc)
alc <- mutate(alc, high_use = TRUE)
View(alc)
View(alc)
if (alc$alc_use > 2) {
alc$high_use <- "TRUE"
} else {
alc$high_use <- "FALSE"
}
if (alc$alc_use>2) {
alc$high_use <- "TRUE"
} else {
alc$high_use <- "FALSE"
}
if (alc$alc_use > "2") {
alc$high_use <- "TRUE"
} else {
alc$high_use <- "FALSE"
}
alc <- mutate(alc, high_use = Dalc + Walc / 2)
View(alc)
View(alc)
alc <- mutate(alc, high_use = (Dalc + Walc) / 2)
View(alc)
View(alc)
if (alc$alc_use > 2) print ("TRUE") else print ("FALSE")
View(alc)
View(alc)
if (alc$high_use > 2) print ("TRUE") else print ("FALSE")
if (alc$high_use > 2) print("TRUE") else print("FALSE")
if (alc$high_use > 2) print ("TRUE") else print ("FALSE")
alc$high_use <- if (alc$alc_use > 2) "TRUE" else "FALSE"
alc$high_use <- function(use) {
ifelse (use > 2, "TRUE", ifelse (use < 2, "FALSE"))
}
alc$high_use <- if (any > 2) "TRUE" else "FALSE"
alc$high_use <- if (all > 2) "TRUE" else "FALSE"
alc$high_use <- if high_use > 2 "TRUE" else "FALSE"
alc$high_use <- if (any > 2) "TRUE" else "FALSE"
alc$high_use <- if (alc$high_use > 2) "TRUE" else "FALSE"
alc$high_use <- if (alc$high_use < 2) == "FALSE"
alc$hig_use < 2 =="FALSE"
alc$hig_use < 2 = "FALSE"
alc$high_use < 2 = "FALSE"
alc$high_use <- if (any < 2) then "FALSE"
if (alc$high_use > 2) {
"FALSE"
} else {
"TRUE"
}
ifelse (alc$high_use > 2) {
"FALSE"
} else {
"TRUE"
}
ifelse (alc$high_use > 2) "FALSE"
glimpse(alc)
write.csv(alc, "/Users/suvi/Documents/GitHub/IODS-project/Data/alc.csv")
View(alc)
View(alc)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep="\t", header=TRUE)", sep=",", header=TRUE)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
View(alc2)
View(alc2)
str(alc2)
library(ggplot2)
plot1 <- ggplot(alc2, aes(x = sex, y = high_use))
plot2 <- plot1 + geom_point()
plot1 <- ggplot(alc2, aes(x = age, y = high_use))
plot2 <- plot1 + geom_point()
plot2
plot1 <- ggplot(alc2, aes(x = age, y = alc_use))
plot2 <- plot1 + geom_point()
plot2
plot3 <- plot2 + geom_smooth(method = "lm")
plot3
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
summary(alc2$age)
``` {r echo=FALSE}
library(GGally)
p <- ggpairs(alc2, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
keep_columns <- c("sex","age","Pstatus", "famsup")
alc3 <- select(alc2, one_of(keep_columns))
library(GGally)
p <- ggpairs(alc3, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
View(alc2)
View(alc2)
keep_columns <- c("sex","age","Pstatus", "famsup", alc_use)
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use"")
alc3 <- select(alc2, one_of(keep_columns))
library(GGally)
p <- ggpairs(alc3, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use"")
alc3 <- select(alc2, one_of(keep_columns))
View(alc3)
View(alc3)
View(alc3)
View(alc3)
View(alc3)
View(alc3)
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use")
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
p <- ggpairs(alc3, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
View(alc2)
View(alc2)
keep_columns <- c("sex","age","health", "absences", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
p <- ggpairs(alc3, mapping = aes(), lower = list(combo = wrap("facethist", bins = 20)))
p
library(ggplot2)
plot1 <- ggplot(alc3, aes(x = age, y = alc_use))
plot2 <- plot1 + geom_point()
plot2
plot3 <- plot2 + geom_smooth(method = "lm")
plot3
```{r}
library(ggplot2)
plot1 <- ggplot(alc3, aes(x = age, y = alc_use))
plot2 <- plot1 + geom_point()
plot2
plot3 <- plot2 + geom_smooth(method = "lm")
plot3
library(ggplot2)
plot1 <- ggplot(alc3, aes(x = sex, y = alc_use))
plot2 <- plot1 + geom_point()
plot2
plot3 <- plot2 + geom_smooth(method = "lm")
plot3
library(ggplot2)
plot1 <- ggplot(alc3, aes(x = health, y = alc_use))
plot2 <- plot1 + geom_point()
plot2
plot3 <- plot2 + geom_smooth(method = "lm")
plot3
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
str(alc2)
summary(alc2$age)
eval()=FALSE}
keep_columns <- c("sex","age","health", "absences", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
{r eval=FALSE}
keep_columns <- c("sex","age","health", "absences", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
keep_columns <- c("sex","age","health", "absences", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
install.packages("gmodels")
library(gmodels)
CrossTable(alc3$sex, alc3$alc_use)
View(alc3)
View(alc3)
sex <- CrossTable(alc3$sex, alc3$alc_use)
margin.table (sex, 1)
margin.table (sex)
prop.table (sex)
sex
prop.table (sex)
prop.table (sex, 1)
prop.table (sex, 2)
sex$t
plot(sex$t)
g1 <- ggplot(data = alc3, aes(x = alc_use, fill=sex))
g1 + geom_bar()
age <- CrossTable(alc3$alc_use, alc3$age)
age <- CrossTable(alc3$age, alc3$alc_use)
age$prop
View(age)
View(age)
View(age)
age
age$prop.row
age$prop.row, options(digits=2)
age$prop.row (options(digits=2))
age$prop.row, 2
age$prop.row 2
age$prop.row (2)
write.table(format(ttf.all, digits=2), 'age$prop.row'
age$prop.row (format(digits=2))
age$prop.row (format(digits=2))
age$prop.row, round (2)
age$prop.row (round (2))
age$prop.row
age$t
boxplot(age~alc_use,data=alc3, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(age~alc_use,data=alc3, main="age~alcohol use ",
xlab="Alcohol use", ylab="Age")
counts <- table(alc3$alc_use, alc3$Pstatus)
View(alc3)
View(alc3)
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
counts <- table(alc3$alc_use, alc3$Pstatus)
barplot(counts, main="Car Distribution by Gears and VS",
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
View(alc3)
View(alc3)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red")
barplot(counts)
barplot(counts)
View(alc3)
View(alc3)
Pstatus <- CrossTable(alc3$Pstatus, alc3$alc_use)
Psatus
Pstatus
Pstatus$t
boxplot(Pstatus~alc_use,data=alc3, main="age~pstatus ",
xlab="Alcohol use", ylab="Pstatus")
g2 + geom_bar()
g2 <- ggplot(data = alc3, aes(x = alc_use, fill=Pstatus))
g2 + geom_bar()
View(alc3)
View(alc3)
famsup <- CrossTable(alc3$famsup, alc3$alc_use)
famsup
famsup$t
g3 <- ggplot(data = alc3, aes(x = alc_use, fill=famsup))
g3 + geom_bar()
m <- glm(high_use ~ sex + age + Pstatus + famsup, data = alc3, family = "binomial")
m <- glm(high_use ~ sex + age + Pstatus + famsup, data = alc, family = "binomial")
m <- glm(high_use ~ sex + age + Pstatus + famsup, data = alc)
m <- glm(high_use ~ sex + age + Pstatus + famsup -1, data = alc)
m <- glm(high_use ~ sex + age + Pstatus + famsup - 1, data = alc)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt ", sep=",", header=TRUE)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
alc2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
str(alc2)
summary(alc2$age)
keep_columns <- c("sex","age","Pstatus", "famsup", "alc_use")
alc3 <- select(alc2, one_of(keep_columns))
alc3 <- select(alc2, one_of(keep_columns))
alc3 <- select.list(alc2, one_of(keep_columns))
